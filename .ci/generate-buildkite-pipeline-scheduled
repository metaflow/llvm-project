#!/usr/bin/env bash
#===----------------------------------------------------------------------===##
#
# Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
# See https://llvm.org/LICENSE.txt for license information.
# SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
#
#===----------------------------------------------------------------------===##

#
# This file generates a Buildkite pipeline that triggers the various CI jobs for
# the LLVM project on scheduled builds.
#
# See https://buildkite.com/docs/agent/v3/cli-pipeline#pipeline-format.
#

set -eu
set -o pipefail

echo "steps:"

# INPUT_LLVM_ENABLE_PROJECTS="bolt;clang;clang-tools-extra;compiler-rt;flang;libc;libclc;lld;llvm;mlir;polly;pstl" \
#   INPUT_BUILDKITE_QUEUE="linux-test" \
#   .ci/generate-buildkite-pipeline-linux-step

# INPUT_LLVM_ENABLE_PROJECTS="clang;clang-tools-extra;flang;libclc;lld;llvm;mlir;polly;pstl" \
#   INPUT_BUILDKITE_QUEUE="windows-test" \
#   .ci/generate-buildkite-pipeline-windows-step

cat <<EOF
- label: ':linux: linux x64'
  artifact_paths:
    - artifacts/**/*
    - '*_result.json'
    - 'build/test-results.xml'
  agents: ${LINUX_AGENTS:-'{"queue": "linux"}'}
  retry:
    automatic:
    - exit_status: -1  # Agent was lost
      limit: 2
    - exit_status: 255 # Forced agent shutdown
      limit: 2
  timeout_in_minutes: 120
  commands:
    - ./.ci/monolithic-linux.sh "${LINUX_PROJECTS:-'bolt;clang;clang-tools-extra;compiler-rt;flang;libc;libclc;lld;llvm;mlir;polly;pstl'}" "check-all"
EOF

cat <<EOF
- label: ':windows: x64 Windows'
  artifact_paths:
    - artifacts/**/*
    - '*_result.json'
    - 'build/test-results.xml'
  agents: ${WINDOWS_AGENTS:-'{"queue": "windows"}'}
  retry:
    automatic:
    - exit_status: -1  # Agent was lost
      limit: 2
    - exit_status: 255 # Forced agent shutdown
      limit: 2
  timeout_in_minutes: 150
  commands:
    - C:\\BuildTools\\Common7\\Tools\\VsDevCmd.bat -arch=amd64 -host_arch=amd64
    - bash .ci/monolithic-windows.sh "${WINDOWS_PROJECTS:-'clang;clang-tools-extra;flang;libclc;lld;llvm;mlir;polly;pstl'}" "check-all"
EOF

cat <<EOF
# - agents:
#     queue: llvm-bazel-premerge
#   commands:
#   - set -eu
#   - cd utils/bazel
#   - bazel query //... + @llvm-project//... | xargs bazel test --config=ci
#   key: bazel
#   label: ':bazel: bazel'
#   retry:
#     automatic:
#     - exit_status: -1
#       limit: 2
#     - exit_status: 255
#       limit: 2
#   timeout_in_minutes: 120
# - trigger: "libcxx-ci"
#   build:
#     message: "${BUILDKITE_MESSAGE}"
#     commit: "${BUILDKITE_COMMIT}"
#     branch: "${BUILDKITE_BRANCH}"
# - trigger: "clang-ci"
#   build:
#     message: "${BUILDKITE_MESSAGE}"
#     commit: "${BUILDKITE_COMMIT}"
#     branch: "${BUILDKITE_BRANCH}"
EOF
